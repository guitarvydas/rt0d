(defstruct Datum
    ptr
    len
    clone
    reclaim
    repr
    reflection)
(definit Datum/new (%p %len %rep %refl)
    (defscope _d (new Datum)
      (mutate (slot _d ptr) (@ copy (slot $ ptr) (slot $ len)))
      (mutate (slot _d len) %len)
      (mutate (slot _d clone) &clone_datum)
      (mutate (slot _d reclaim) &reclaim_datum)
      (mutate (slot _d repr)) %rep)
      (mutate (slot _d reflection) %refl)
      _d)


(defm clone_datum 
   (defscope _d (new)
      (defscope _new_ptr (@ copy (slot $ ptr) (slot $ len)))
         (mutate (slot _d ptr) _new_ptr)
         (mutate (slot _d len) (slot $ len))
	 (mutate (slot _d clone) &clone_datum)
	 (mutate (slot _d reclaim) &reclaim_datum)
	 (mutate (slot _d repr) (slot $ repr))
	 (mutate (slot _d reflection) (@ clone_reflection () ()))
	 _d
     )))

(defm reclaim_datum
   (@ free ((slot $ ptr) (slot $ len)) ())
   (@ reclaim_reflection) () ())

(defm @ copy ($ptr int) ())
(defm @ clone_reflection ($ptr) ())
(defm @ free ($ptr int) ())

(handle $ptr)
(handle int)
(handle string)
(handle bytes)

(@ datum_to_string () (string))
(@ str (string) (Datum))
(@ datum_to_bytes () (bytes))
